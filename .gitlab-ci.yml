stages: 
  - build-webapp
    # just run a docker compose file that will pull image created in previous step
    # file will contain base application and database and put them in th same network 
  - dockerize-webapp
    # this step will asure to have image prepered before pushing it to docker hub
  - push-to-dockerhub
    #create env for building app without running it, 
    #writing a dockerfile and posting finished image for dockerhub
    #how to login to dockerhub and then post image
  - tests
    # write tests that will allow to determine if features work, 
    #using curl or postman get xml file to send requests to appliacation
    #to-docker-hub:


build-webapp:
  stage: build-webapp
  image: maven:3.9.6-amazoncorretto-21-debian
  before_script:
    - apt update -y
    - apt upgrade -y
    - java --version
    - mvn -v
  script:
    - mvn package
  artifacts:
    paths:
      - target


dockerize-webapp:
  stage: dockerize-webapp
  image: docker:latest
  services:
    - docker:dind
  dependencies:
    - build-webapp
  before_script:
    - docker-compose --version
    - docker info
  script:
    - ls
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    
push-to-dockerhub:
  image: docker:latest
  stage: push-to-dockerhub
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" 
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

